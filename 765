-- ========= [ TAB: ESP â€” God Set ] =========
Tabs.ESP = Window:AddTab({ Title = "ESP (God Set)", Icon = "eye" })
local esp_enable      = Tabs.ESP:CreateToggle("god_esp_enable",    { Title = "Enable ESP", Default = true })
local esp_maxdist     = Tabs.ESP:CreateSlider("god_esp_maxdist",    { Title = "Max distance (studs)", Min=100, Max=3000, Rounding=0, Default=1200 })
local esp_showlabel   = Tabs.ESP:CreateToggle("god_esp_showlabel",  { Title = "Show label over head", Default = true })
local esp_highlight   = Tabs.ESP:CreateToggle("god_esp_highlight",  { Title = "Highlight only if Full Set (3/3)", Default = true })
local esp_only_full   = Tabs.ESP:CreateToggle("god_esp_onlyfull",   { Title = "Show ONLY players with Full Set (3/3)", Default = false })

local COLOR_OK  = Color3.fromRGB(90,255,120)
local COLOR_LO  = Color3.fromRGB(255,210,80)
local COLOR_NO  = Color3.fromRGB(255,90,90)

local GOD_MATCH = { halo={"God Halo","Halo"}, chest={"God Chestplate","Chestplate","God Armor","Armor"}, legs={"God Legs","Legs","Greaves"} }
local function nameMatch(n, list) n=_lower(n) for _,v in ipairs(list) do if n:find(_lower(v),1,true) then return true end end end
local function countGodPieces(model)
    local bits = {halo=false, chest=false, legs=false}
    for _,d in ipairs(model:GetDescendants()) do
        local nm=d.Name
        if not bits.halo  and nameMatch(nm, GOD_MATCH.halo)  then bits.halo  = true end
        if not bits.chest and nameMatch(nm, GOD_MATCH.chest) then bits.chest = true end
        if not bits.legs  and nameMatch(nm, GOD_MATCH.legs)  then bits.legs  = true end
    end
    return (bits.halo and 1 or 0) + (bits.chest and 1 or 0) + (bits.legs and 1 or 0)
end
local function getCharModel(p) local wf=workspace:FindFirstChild("Players"); if wf then local m=wf:FindFirstChild(p.Name); if m and m:IsA("Model") then return m end end return p.Character end
local GOD_ESP = { map = {}, loop = nil, addConn=nil, remConn=nil }
local function makeBoard(adornee) local bb=Instance.new("BillboardGui"); bb.Name="_ESP_GODSET_BB"; bb.AlwaysOnTop=true; bb.Size=UDim2.fromOffset(150,22); bb.StudsOffsetWorldSpace=Vector3.new(0,3.6,0); bb.Adornee=adornee; bb.Parent=adornee; local tl=Instance.new("TextLabel"); tl.BackgroundTransparency=1; tl.Size=UDim2.fromScale(1,1); tl.Font=Enum.Font.GothamBold; tl.TextScaled=true; tl.TextStrokeTransparency=0.25; tl.Text="God Set 0/3"; tl.Parent=bb; return bb,tl end
local function ensureHL(model) local hl=model:FindFirstChild("_ESP_GODSET_HL"); if not hl then hl=Instance.new("Highlight"); hl.Name="_ESP_GODSET_HL"; hl.DepthMode=Enum.HighlightDepthMode.AlwaysOnTop; hl.FillTransparency=1; hl.OutlineTransparency=0; hl.Adornee=model; hl.Parent=model end return hl end
local function attachPlayer(p) if p==Players.LocalPlayer then return end local m=getCharModel(p); if not (m and m.Parent) then return end local hrp=m:FindFirstChild("HumanoidRootPart") or m:FindFirstChildWhichIsA("BasePart"); if not hrp then return end local bb,tl=makeBoard(hrp); local hl=ensureHL(m); GOD_ESP.map[p]={model=m, root=hrp, bb=bb, tl=tl, hl=hl} end
local function detachPlayer(p) local rec=GOD_ESP.map[p]; if not rec then return end if rec.bb then pcall(function() rec.bb:Destroy() end) end if rec.hl then pcall(function() rec.hl:Destroy() end) end GOD_ESP.map[p]=nil end
local function startGodESP()
    if GOD_ESP.loop then return end
    for _,p in ipairs(Players:GetPlayers()) do if p ~= Players.LocalPlayer then attachPlayer(p) end end
    GOD_ESP.addConn = Players.PlayerAdded:Connect(function(p) task.defer(function() attachPlayer(p) end) end)
    GOD_ESP.remConn = Players.PlayerRemoving:Connect(detachPlayer)
    GOD_ESP.loop = RunService.Heartbeat:Connect(function()
        if not esp_enable.Value then for _,rec in pairs(GOD_ESP.map) do if rec.bb then rec.bb.Enabled=false end if rec.hl then rec.hl.Enabled=false end end return end
        local myRoot = (plr.Character and plr.Character:FindFirstChild("HumanoidRootPart")) or nil
        for p,rec in pairs(GOD_ESP.map) do
            if not (rec.model and rec.model.Parent and rec.root and rec.root.Parent) then detachPlayer(p); attachPlayer(p); rec=GOD_ESP.map[p] end
            if rec then
                local inDist = true
                if myRoot then inDist = ((rec.root.Position - myRoot.Position).Magnitude <= esp_maxdist.Value) end
                local cnt = countGodPieces(rec.model)
                local col = (cnt>=3 and COLOR_OK) or (cnt>=1 and COLOR_LO) or COLOR_NO
                local visibleByFilter = (not esp_only_full.Value) or (cnt>=3)
                if rec.tl then rec.tl.Text = string.format("God Set %d/3", cnt); rec.tl.TextColor3=col end
                if rec.bb then rec.bb.Enabled = esp_showlabel.Value and inDist and visibleByFilter end
                if rec.hl then rec.hl.OutlineColor=col; rec.hl.Enabled = (cnt>=3 and esp_highlight.Value and inDist) end
            end
        end
    end)
end
local function stopGodESP() if GOD_ESP.loop then GOD_ESP.loop:Disconnect() GOD_ESP.loop=nil end if GOD_ESP.addConn then GOD_ESP.addConn:Disconnect() GOD_ESP.addConn=nil end if GOD_ESP.remConn then GOD_ESP.remConn:Disconnect() GOD_ESP.remConn=nil end for p,_ in pairs(GOD_ESP.map) do detachPlayer(p) end end
esp_enable:OnChanged(function(v) if v then startGodESP() else stopGodESP() end end)
if esp_enable.Value then startGodESP()
